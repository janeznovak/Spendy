#GET /api/v2/expenses/{idExpense}
/expenses/{idExpense}:
  get:
    summary: Get expense by ID
    description: Returns expense
    tags: [Expenses]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: idExpense
        description: unique identifier of Expense
        schema:
          type: string
        required: true
        example: 5feb818418ade71fc465135b
    responses:
      "200":
        description: Expense element
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Expense"
      "500":
        description: Error in database
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
      "404":
        description: Expense was not found
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
#GET /api/v2/group/{idGroup}/expenses

/groups/{idGroup}/expenses:
  get:
    summary: Get expenses by group ID
    description: Return array of Expenses
    tags: [Expenses]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: idGroup
        description: unique identifier of Group
        schema:
          type: string
        required: true
        example: 5fe8ff7f67c57310401aca3b
    responses:
      "200":
        description: Array of group Expenses
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Expense"
      "500":
        description: Error in database
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
      "404":
        description: Expense was not found
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
  post:
    summary: Add expense to group
    description: Add new expense to group
    tags: [Expenses]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: idGroup
        description: unique identifier of Group
        schema:
          type: string
        required: true
        example: 5fe8ff7f67c57310401aca3b
    requestBody:
      description: New expense which will be added to group
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Expense_for_adding"
    responses:
      "400":
        description: Category or description not in correct form
        content:
          application/json:
            schema:
              type: string
              example: "Description is not allowed (does not contain only chars, nums and whitespaces"
            examples:
              Category not correct:
                $ref: "#/components/examples/Error_Category"
              Description not correct:
                $ref: "#/components/examples/Error_Description"
      "200":
        description: "Adding was successful"
        content:
          application/json:
            schema:
              type: string
              example: "Adding was successful"
      "500":
        description: Error in database
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
      "404":
        description: Expense was not found
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"

/groups/{idGroup}/expenses/{idExpense}:
  delete:
    summary: Delete expense from group
    description: Delete expense from group
    tags: [Expenses]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: idGroup
        description: unique identifier of Group
        schema:
          type: string
        required: true
        example: 5fe8ff7f67c57310401aca3b
      - in: path
        name: idExpense
        description: unique identifier of Expense
        schema:
          type: string
        required: true
        example: 5feb818418ade71fc465135b
    responses:
      "200":
        description: "Deleting was successful"
        content:
          application/json:
            schema:
              type: string
              example: "Deleting was successful"
      "500":
        description: Error in database
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
      "404":
        description: Expense was not found
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
  put:
    summary: Update expense from group
    description: Update expense from group
    tags: [Expenses]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: idGroup
        description: unique identifier of Group
        schema:
          type: string
        required: true
        example: 5fe8ff7f67c57310401aca3b
      - in: path
        name: idExpense
        description: unique identifier of Expense
        schema:
          type: string
        required: true
        example: 5feb818418ade71fc465135b
    requestBody:
      description: New expense which will be added to group
      required: false
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Expense_for_update"
    responses:
      "200":
        description: "Updating was successful"
        content:
          application/json:
            schema:
              type: string
              example: "Updating was successful"
      "500":
        description: Error in database
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
      "404":
        description: Expense was not found
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"

#GET /api/v2/group/{idGroup}/expenses/pages
/groups/{idGroup}/expenses/pages:
  get:
    summary: Get expenses by group ID
    description: Return array of Expenses
    tags: [Expenses]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: idGroup
        description: unique identifier of Group
        schema:
          type: string
        required: true
        example: 5fe8ff7f67c57310401aca3b
      - in: query
        name: page
        description: page number of expenses that you would like to get
        schema:
          type: number
        required: true
        example: 1
      - in: query
        name: isExpenditure
        description: For geting only Expenditures or Incomes
        schema:
          type: boolean
        required: false
        examples:
          Expenditures:
            value: true
            summary: get only expenditures
          Incomes:
            value: false
            summary: get only incomes
      - in: query
        name: search
        description: Get only Activites that contains your searching string
        schema:
          type: string
        required: false
        example: tools
      - in: query
        name: date
        description: Get only Activites sorted by date in descending order
        schema:
          type: string
        required: false
        example: desc
    responses:
      "200":
        description: Object of paginated group expenses
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/ExpenesWithQueriesPagination"
      "500":
        description: Error in database
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
      "404":
        description: Expense was not found
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Error"
