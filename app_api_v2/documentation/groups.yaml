# /api/v2/groups
paths:
  /groups:
    get:
      summary: Get all groups
      description: Returns a list of all groups
      tags: [Groups]
      responses:
        "200":
          description: An array of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group_bare"
        "500":
          description: Error in database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: No group was found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Groups not found

  /groups/{idGroup}:
    get:
      summary: Get one detailed group
      description: Get group with populated expenses and userIds
      tags: [Groups]
      parameters:
        - in: path
          name: idGroup
          description: id of the group
          schema:
            type: string
          required: true
          example: 5fe7cc18e0fe833da436fbdd
      responses:
        "200":
          description: One detailed group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group_populatedExpensesUserIds"
#        "500":
#          description: Error in database
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#        "404":
#          description: No group was found
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#              example:
#                message: Groups not found
