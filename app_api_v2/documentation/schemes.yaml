############# ERROR: [500] "Error in database" ##########
components:
  examples:
    Error_groupId:
      summary: Group not found
      value:
        message: Group with this id does not exist
    Error_userId:
      summary: User not found
      value:
        message: User with this id does not exist
    Error_mail:
      summary: User with this mail not found
      value:
        message: User with this mail does not exist

  schemas:
    Error:
      type: object
      description: Returns errors
      required: -message
      properties:
        message:
          type: string
        error:
          type: string
      example:
        message: Error in database
        error: optional error describing the database error

    Error_deleteUser:
      type: object
      description: Returns errors
      required: -message
      properties:
        message:
          type: string
        error:
          type: string
      example:
        message: User with id 5fe90ff7581ae033a4e26ed2 not found
        error: null

    User:
      type: object
      description: \-
      required:
        - username
        - name
        - surname
        - mail
        - pass
        - balance
      properties:
        username:
          type: integer
          description: Username of the user
          example: janez123
        name:
          type: string
          description: Name of the user
          example: Janez
        surname:
          type: string
          description: Surname of the user
          example: Novak
        mail:
          type: boolean
          description: Mail address of the user
          example: j_novak@email.com
        pass:
          type: string
          description: Password of the user
          example: securePass123
        balance:
          type: number
          description: Current balance of the user
          example: 100.9
        groupIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) group IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]

    ####### GET api/v2/users [User_getAllUsers] ######
    User_getAllUsers:
      type: object
      description: Returns all users in the database
      properties:
        groupIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) group IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        _id:
          type: string
          description: Internal database ID of the user
          example: 5fc44bd3f35a902b3000803c
        username:
          type: string
          description: Username of the user
          example: janez123
        name:
          type: string
          description: Name of the user
          example: Janez
        surname:
          type: string
          description: Surname of the user
          example: Novak
        balance:
          type: number
          description: Current balance of the user in €
          example: 100.9
        mail:
          type: boolean
          description: Mail address of the user
          example: j_novak@email.com

    User_selection:
      type: object
      description: Returns all users in the database
      properties:
        _id:
          type: string
          description: Internal database ID of the user
          example: 5fe7cc18e0fe833da436fbde
        groupIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) group IDs
          example: ["5fe7cc18e0fe833da436fbdd", "5fe8ff1f67c57310401aca35"]
        username:
          type: string
          description: Username of the user
          example: janez123
        name:
          type: string
          description: Name of the user
          example: Janez
        surname:
          type: string
          description: Surname of the user
          example: Novak
        mail:
          type: boolean
          description: Mail address of the user
          example: j_novak@email.com
        balance:
          type: number
          description: Current balance of the user in €
          example: 100.9

    User_getByName:
      type: object
      description: \-
      required:
        - username
        - name
        - surname
        - mail
        - pass
        - balance
      properties:
        groupIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) group IDs
          example: [ "5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713" ]
        _id:
          type: string
          description: Internal database ID of the user
          example: 5fe7cc18e0fe833da436fbde
        name:
          type: string
          description: Name of the user
          example: Janez
        surname:
          type: string
          description: Surname of the user
          example: Novak
        mail:
          type: boolean
          description: Mail address of the user
          example: j_novak@email.com
        balance:
          type: number
          description: Current balance of the user
          example: 100.9
        username:
          type: integer
          description: Username of the user
          example: janez123
#        nakljucnaVrednost:
#          type: string
#          description: Random value of the user
#          example: 59fffd8a019d242f2a48f253afc0050c
#        zgoscenaVrednost:
#          type: string
#          description: Hash value of the user
#          example: ee2abb81390cd40088a3e2c413ee3949cbd722fe75f7bb5238d12b1ba6b142e9d7a79edadcd0cc5644b081da4fbe912f73d8a7f723b01f277b53fc01439dfd13
#        created_at:
#          type: date
#          description: Time of user creation(registration)
#          example: 2020-12-21T20:53:26.019Z
#        updated_at:
#          type: date
#          description: Time of users last update
#          example: 2020-12-29T16:48:50.590Z


    User_selection_bare:
      type: object
      description: Returns all users in the database
      properties:
        _id:
          type: string
          description: Internal database ID of the user
          example: 5fe7cc18e0fe833da436fbde
        name:
          type: string
          description: Name of the user
          example: Janez
        surname:
          type: string
          description: Surname of the user
          example: Novak
        mail:
          type: boolean
          description: Mail address of the user
          example: j_novak@email.com
        username:
          type: string
          description: Username of the user
          example: janez123

    ########################## GETapi/v2/groups [Group_bare] ############################
    Group_bare:
      type: object
      description: Returns all groups in the database
      properties:
        balance:
          type: number
          description: Current balance of the group in €
          example: 100.9
        userIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        adminIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        expenses:
          type: array
          items:
            type: string
          description: A list of valid(existing) expense IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        _id:
          type: string
          description: Internal database ID of the group
          example: 5fc44bd3f35a902b3000803c
        name:
          type: string
          description: Name of the group
          example: Skupina 10

    Group_populatedExpensesUserIds:
      type: object
      description: Returns all groups in the database
      properties:
        balance:
          type: number
          description: Current balance of the group in €
          example: 100.9
        userIds:
          type: array
          items:
            $ref: "#/components/schemas/User_selection"
        adminIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        expenses:
          type: array
          items:
            $ref: "#/components/schemas/Expense_selection"
        _id:
          type: string
          description: Internal database ID of the group
          example: 5fc44bd3f35a902b3000803c
        name:
          type: string
          description: Name of the group
          example: Skupina 10

    Group_populatedUserIds:
      type: object
      description: Returns all groups in the database
      properties:
        balance:
          type: number
          description: Current balance of the group in €
          example: 100.9
        userIds:
          type: array
          items:
            $ref: "#/components/schemas/User_selection_bare"
        adminIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        expenses:
          type: array
          items:
            type: string
          description: A list of valid(existing) expense IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        _id:
          type: string
          description: Internal database ID of the group
          example: 5fc44bd3f35a902b3000803c
        name:
          type: string
          description: Name of the group
          example: Skupina 10

    Group_createNew_response:
      type: object
      description: Returns all groups in the database
      properties:
        balance:
          type: number
          description: Current balance of the group in €
          example: 0
        userIds:
          type: array
          items:
            $ref: "#/components/schemas/User_selection_bare"
        adminIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        expenses:
          type: array
          items:
            type: string
          description: An empty list of expense ids
          example: []
        _id:
          type: string
          description: Internal database ID of the group
          example: 5fc44bd3f35a902b3000803c
        name:
          type: string
          description: Name of the group
          example: Skupina 10

    Group:
      type: object
      required:
        - name
        - balance
      properties:
        name:
          type: string
          description: Name of the group
          example: Družina
        balance:
          type: number
          description: Current balance of the group
          example: 19999.88
        userIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        adminIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) user IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]
        expenses:
          type: array
          items:
            type: string
          description: A list of valid(existing) expense IDs
          example: ["5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713"]

    Expense:
      type: object
      description: Expense object
      required:
        - isExpenditure
        - cost
        - date
        - category_name
        - created_by
        - groupId
      properties:
        isExpenditure:
          type: boolean
          description: Marks if the expense is an expenditure or a cash inflow
          example: true
        cost:
          type: number
          description: The cost in eur
          example: 89.99
        date:
          type: string
          format: date-time
          description: Date when the expense was created
          example: 2017-07-21T17:32:28Z
        category_name:
          type: string
          description: Name of the category
          example:
        created_by:
          type: string
          description: user ID
          example: "8fc0cca0cd9e25474436rd32"
        description:
          type: string
          description: A description od the expense
          example: a very helpful description
        groupId:
          type: string
          description: A list of valid(existing) group IDs
          example: "5fc01ba0cd9e25474436be60"

    Expense_selection:
      type: object
      description: Expense object
      required:
        - isExpenditure
        - cost
        - date
        - category_name
        - created_by
        - groupId
      properties:
        _id:
          type: string
          description: Internal database ID of the expense
          example: 5fe91499d715641384094a0b
        isExpenditure:
          type: boolean
          description: Marks if the expense is an expenditure or a cash inflow
          example: true
        cost:
          type: number
          description: The cost in eur
          example: 89.99
        date:
          type: string
          format: date-time
          description: Date when the expense was created
          example: 2020-12-18T18:27:17.084Z
        category_name:
          type: string
          description: Name of the category
          example: Baby
        created_by:
          type: string
          description: user ID of the one that created the expense
          example: "5fe7cc18e0fe833da436fbde"
        description:
          type: string
          description: A description od the expense
          example: The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients
        groupId:
          type: string
          description: A valid(existing) group ID
          example: "5fe7cc18e0fe833da436fbdd"

    Group_createNew_request:
      type: object
      description: Expense object
      required:
        - idUser
        - groupName
      properties:
        idUser:
          type: string
          description: user ID
          example: "5fe7cc18e0fe833da436fbde"
        groupName:
          type: string
          description: A name to give to the group
          example: "Skupina 20"

    Group_addUser:
      type: object
      description: Add user to group body
      required:
        - mail
      properties:
        mail:
          type: string
          description: Email of the user you want to add to the group
          example: "b@b.b"

    User_getUserById:
      type: object
      description: Returns a user with specified id
      properties:
        groupIds:
          type: array
          items:
            type: string
          description: A list of valid(existing) group IDs
          example: [ "5fc01ba0cd9e25474436be60", "5fba7cb28a41eb7ee6452713" ]
        _id:
          type: string
          description: Internal database ID of the user
          example: 5fe900054efb621cf4256378
        name:
          type: string
          description: Name of the user
          example: Janez
        surname:
          type: string
          description: Surname of the user
          example: Novak
        mail:
          type: boolean
          description: Mail address of the user
          example: j_novak@email.com
        balance:
          type: number
          description: Current balance of the user in €
          example: 100.9
        username:
          type: string
          description: Username of the user
          example: janez123

    User_postBody:
      type: object
      description: body for updating a user
      required:
#        - isExpenditure
#        - cost
#        - date
#        - category_name
#        - created_by
#        - groupId
      properties:
        name:
          type: string
          description: The name you want to give to the user
          example: France
        surname:
          type: string
          description: The surname you weant to give to the user
          example: Prešeren
#        password:
#          type: string
#          description: New password
#          example: NekoGeslo todo: kako je z geslom?
        balance:
          type: number
          description: Users new balance
          example: 500.0
#        created_by:
#          type: string
#          description: user ID
#          example: "8fc0cca0cd9e25474436rd32"
#        groupsIds:
#          type: string
#          description: A group you want to add the user in
#          example: a very helpful description
#        groupId:
#          type: string
#          description: A list of valid(existing) group IDs
#          example: "5fc01ba0cd9e25474436be60"